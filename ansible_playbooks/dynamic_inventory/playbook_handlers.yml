- name: This playbook will coinfigure and deploy webpages onubuntu and centos servers
  hosts: all
  become: yes
  become_method: su
  vars:
   - provisioner_tool: Docker
   - automation_tool: Ansible 
  tasks: 
   - name: Install nginx on UBuntuOS
     apt: name=nginx update_cache=yes state=present
     when: (ansible_os_family == "Debian" and ansible_distribution == "Ubuntu")

   - name: Install epel-release on CEntOS
     yum: name=epel-release state=present
     when: (ansible_os_family == "RedHat" and ansible_distribution == "CentOS")

   - name: Install nginx on centOS
     yum: name=nginx update_cache=yes state=present
     when: (ansible_os_family == "RedHat" and ansible_distribution == "CentOS")

   - name: Configure nginx on UbuntuOS
     copy: src=ubuntu_default dest=/etc/nginx/sites-available/default
     when: (ansible_os_family == "Debian" and ansible_distribution == "Ubuntu")
     notify:
      - Restart nginx web server on ubuntu
   - name: Configure nginx on CEntOS
     copy: src=centos_default.conf dest=/etc/nginx/conf.d/default.conf
     when: (ansible_os_family == "RedHat" and ansible_distribution == "CentOS")
     notify:
      - Restart nginx web server on centOS

   - name: Create custom web page in nginx
     shell: "mkdir -p /var/html"

   - name: Deploy webpage i nnginx
     template: src=index.html.j2 dest=/var/html/index.html
 
- handlers:
       - name: Restart nginx web server on ubuntu
         service: name=nginx state=restarted
         when: (ansible_os_family == "Debian" and ansible_distribution == "Ubuntu")
       - name: Restart nginx web server on centOS
         service: name=nginx state=restarted
         when: (ansible_os_family == "RedHat" and ansible_distribution == "CentOS")


